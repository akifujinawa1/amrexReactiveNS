Host Name: ironmontreal
=== If no file names and line numbers are shown below, one can run
            addr2line -Cpfie my_exefile my_line_address
    to convert `my_line_address` (e.g., 0x4a6b) into file name and line number.
    Or one can use amrex/Tools/Backtrace/parse_bt.py.

=== Please note that the line number reported by addr2line may not be accurate.
    One can use
            readelf -wl my_exefile | grep my_line_address'
    to find out the offset for that line.

 0: ./main2d.gnu.DEBUG.MPI.ex(+0x2d2b40) [0x55b676ec0b40]
    amrex::BLBackTrace::print_backtrace_info(_IO_FILE*) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Base/AMReX_BLBackTrace.cpp:186

 1: ./main2d.gnu.DEBUG.MPI.ex(+0x2d2625) [0x55b676ec0625]
    amrex::BLBackTrace::handler(int) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Base/AMReX_BLBackTrace.cpp:96

 2: ./main2d.gnu.DEBUG.MPI.ex(+0x12f7d6) [0x55b676d1d7d6]
    amrex::ParallelDescriptor::Abort(int, bool) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Base/AMReX_ParallelDescriptor.cpp:213

 3: ./main2d.gnu.DEBUG.MPI.ex(+0xae264) [0x55b676c9c264]
    amrex::Abort_host(char const*) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Base/AMReX.cpp:248

 4: ./main2d.gnu.DEBUG.MPI.ex(+0x82b4d) [0x55b676c70b4d]
    amrex::Abort(char const*) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Base/AMReX.H:163
 (inlined by) amrex::ParticleContainer_impl<amrex::Particle<10, 3>, 0, 0, std::allocator>::locateParticle(amrex::Particle<10, 3>&, amrex::ParticleLocData&, int, int, int, int) const at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Particle/AMReX_ParticleContainerI.H:344

 5: ./main2d.gnu.DEBUG.MPI.ex(+0x7e253) [0x55b676c6c253]
    amrex::ParticleContainer_impl<amrex::Particle<10, 3>, 0, 0, std::allocator>::RedistributeCPU(int, int, int, int, bool) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Particle/AMReX_ParticleContainerI.H:1547 (discriminator 4)

 6: ./main2d.gnu.DEBUG.MPI.ex(+0x78a92) [0x55b676c66a92]
    amrex::ParticleContainer_impl<amrex::Particle<10, 3>, 0, 0, std::allocator>::Redistribute(int, int, int, int, bool) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Particle/AMReX_ParticleContainerI.H:1083

 7: ./main2d.gnu.DEBUG.MPI.ex(+0x6f22b) [0x55b676c5d22b]
    AmrLevelAdv::updateParticleInfo(amrex::MultiFab&, double const&, double const&, double const&) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../Source/particleFunc.cpp:205

 8: ./main2d.gnu.DEBUG.MPI.ex(+0x1bde6) [0x55b676c09de6]
    AmrLevelAdv::advance(double, double, int, int) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../Source/AmrLevelAdv.cpp:768

 9: ./main2d.gnu.DEBUG.MPI.ex(+0x4106e8) [0x55b676ffe6e8]
    amrex::Amr::timeStep(int, double, int, int, double) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Amr/AMReX_Amr.cpp:1987

10: ./main2d.gnu.DEBUG.MPI.ex(+0x410f44) [0x55b676ffef44]
    amrex::Amr::coarseTimeStep(double) at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../../../amrex/Src/Amr/AMReX_Amr.cpp:2097

11: ./main2d.gnu.DEBUG.MPI.ex(+0x4af53) [0x55b676c38f53]
    main at /home/afujinawa/amrexReactiveNS/particleNS/Exec/UniformVelocity/../../Source/main.cpp:111

12: /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3) [0x7f7b20dd0083]

13: ./main2d.gnu.DEBUG.MPI.ex(+0x1683e) [0x55b676c0483e]
    ?? ??:0

